{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["loopSounds","keyCode","key","id","status","url","PadKey","play","sound","handleKeydown","event","React","useEffect","document","addEventListener","className","onClick","loop","src","Pad","power","sounds","map","InstrumentControl","name","volume","stopLoops","handleVolumeChange","Math","round","type","max","min","step","value","onChange","Test","App","useState","setPower","setSounds","soundName","setSoundName","setVolume","deactivateAudio","audio","setTimeout","parentElement","style","backgroundColor","color","updateItem","newvalue","index","findIndex","x","g","console","log","slice","getElementById","forEach","keyPadStatus","pause","styleActiveKey","currentTime","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3970bb48.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import Button from 'react-bootstrap/Button';\nimport { Button } from 'reactstrap';\n\n//Todo: Move this to a different json file\nconst loopSounds = [\n  {\n    keyCode: 81,\n    key: 'Q',\n    id: 'Future Beats',\n    status: false,\n    url: 'sounds/future_beats.mp3'\n  },\n  {\n    keyCode: 87,\n    key: 'W',\n    id: 'Electric Guitar',\n    status: false,\n    url: 'sounds/electric_guitar_120.mp3'\n  },\n  {\n    keyCode: 69,\n    key: 'E',\n    id: 'Groove',\n    status: false,\n    url: 'sounds/groove_120.mp3'\n  },\n  {\n    keyCode: 65,\n    key: 'A',\n    id: 'Heavy Funk',\n    status: false,\n    url: 'sounds/heavyfunk_120.mp3'\n  },\n  {\n    keyCode: 83,\n    key: 'S',\n    id: 'Maze Politics',\n    status: false,\n    url: 'sounds/mazepolitics_120.mp3'\n  },\n  {\n    keyCode: 68,\n    key: 'D',\n    id: 'Pass Groove',\n    status: false,\n    url: 'sounds/passgroove.mp3'\n  },\n  {\n    keyCode: 90,\n    key: 'Z',\n    id: 'Silent Star',\n    status: false,\n    url: 'sounds/silentstar_120.mp3'\n  },\n  {\n    keyCode: 88,\n    key: 'X',\n    id: 'Stompy Slosh',\n    status: false,\n    url: 'sounds/stompyslosh_120.mp3'\n  },\n  {\n    keyCode: 67,\n    key: 'C',\n    id: 'Stutter Breakbeats',\n    status: false,\n    url: 'sounds/stutter_breakbeats.mp3'\n  }\n];\n\n\n\n\nconst PadKey = ({play ,sound: {key,url, keyCode, id, status }}) => {\n        // Allowing keyboard usage for the loop machine\n      const handleKeydown = (event) => { \n\n        if(event.keyCode === keyCode){\n\n          play(key,id, status);\n        }\n\n      };\n\n      React.useEffect(() => {\n        document.addEventListener(\"keydown\",handleKeydown) \n\n      }, [key,id,status]);\n\n          return (\n            <button id={keyCode} className =\"instrument\" onClick={\n              \n              ()=> {\n                play(key, id, status)\n              } \n            \n            }>\n                  <audio loop className=\"clip\" id={key} src={url}></audio>\n                    {key}\n              </button>\n          );\n}\n\n// Each Pad is responsible for a different instrument\nconst Pad = ({power, play, sounds}) => {\n    return(\n      <div className=\"keyboard\">\n        {power \n        ? loopSounds.map((sound) =>  <PadKey play={play} sound={sound} sounds={sounds}/>)\n        : loopSounds.map((sound) =>  <PadKey play={play} sound={{...sound, url:\"#\"}}/>)}\n      </div>\n    );\n}\n\nconst InstrumentControl = ({name, volume,power,stopLoops, handleVolumeChange}) => {\n  return(\n  <div className= \"control\">\n    <button onClick={stopLoops}>Turn the power {power ? \"OFF\" : \"ON\"}</button>\n    <h2>Volume: %{Math.round(volume * 100)}</h2>\n    <input type=\"range\" max=\"1\" min=\"0\" step=\"0.01\" value={volume} onChange={handleVolumeChange} />\n      <h2>{name}</h2>\n  </div>\n  );\n}\n\nconst Test = () => {\n\n  return (\n\n<button type=\"button\" className=\"btn btn-danger\"> START RECORDING</button>\n  );\n}\n\n\nfunction App() {\nconst [power, setPower] = React.useState(true);\nconst [sounds, setSounds] = React.useState(loopSounds);\nconst [soundName, setSoundName] = React.useState(\"\");\nconst [volume, setVolume] = React.useState(1);\n\n\nconst stopLoops = () =>{\n  setPower(power ? false : true);\n\n  const audios = sounds.map(sound => document.getElementById(sound.key));\n  audios.forEach(audio => {\n    deactivateAudio(audio);\n  });\n// Go over all sounds and make false.\n  sounds.map(sound => \n    {\n      updateItem(sound.key,\"status\",false);\n    }\n    )\n\n}\n\nconst handleVolumeChange = (event) => {\n  setVolume(event.target.value);\n}\n\n\nconst styleActiveKey = (audio) => {\n  if(power){\n  audio.parentElement.style.backgroundColor = \"#000000\";\n  audio.parentElement.style.color = \"#ffffff\";\n  }\n}\n\nconst deactivateAudio = (audio) => {\n  setTimeout(() => {\n    audio.parentElement.style.backgroundColor = \"#ffffff\"\n    audio.parentElement.style.color = \"#000000\"\n  }, 300)\n}\n\n// function which plays the audio \n  const play = (key, id, keyPadStatus) => {\n\n    if(power){\n\n      const audio = document.getElementById(key);\n      if(!keyPadStatus) {\n          setSoundName(id)\n        // const player = new Tone.Player(audio.src).toDestination();\n          styleActiveKey(audio);\n          updateItem(key,\"status\",keyPadStatus ? false : true);\n          audio.currentTime = 0;\n          // This is the older player\n          audio.play();\n      }else{\n        updateItem(key,\"status\",keyPadStatus ? false : true);\n        deactivateAudio(audio);\n        audio.pause();\n      }\n\n    }\n  };\n\n  // Setting the current volume for each one of the audio elements\n  const setKeyVolume = () => {\n    const audios = sounds.map(sound => document.getElementById(sound.key));\n   // console.log(\"Set Key Volume ran!\");\n    audios.forEach(audio => {\n      if(audio) {\n        audio.volume = volume;\n      }\n    }) \n  }\n\n  // setting status on/off of keypad to be true/false\nconst updateItem = (key, value, newvalue) => {\n\n  var index = loopSounds.findIndex(x => x.key === key);\n  let g = loopSounds[index]\n  g[value] = newvalue\n  if (index === -1){\n    // handle error\n    console.log('no match')\n  }\n  else\n  //  console.log(sounds);\n    setSounds([\n      ...sounds.slice(0,index),\n      g,\n      ...sounds.slice(index+1)\n    ]\n            );\n}\n\n  return (\n\n        <div id=\"loop_machine\">\n              {setKeyVolume()}\n            <div className =\"wrapper\">\n                <Pad power={power} play={play} sounds={sounds}/>\n                \n                <InstrumentControl \n                    stopLoops = {stopLoops}\n                    volume ={volume}\n                    power ={power}\n                    handleVolumeChange ={handleVolumeChange}\n                    name={soundName}/>\n\n                    <Test />\n            </div>\n\n\n        </div>\n        \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Importing the Bootstrap CSS\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}